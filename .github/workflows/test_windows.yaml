name: My workflow

on:
  push:
    branches: [master,dev]
    # Nosotros podemos espesificar las ramas en las que queremos que se ejecute este yaml pero tambien podemos hacerlo de
    # la siguiente manera:
    # branches: [master,dev]
jobs:
  build:
    runs-on: windows-latest
    # Aqui al igual que con las branch podemos modificar la sintaxis de nuestra lista:
    # runs-on: [ubuntu-latest]
    steps:
      - name: using actions of github
        uses: actions/checkout@v2
      - name: setup .NET core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 3.1.101
      - name: install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
      #Con el uso de acciones de github en el marketplace, podemos estructurar mejor
      #nuestro archivo yaml
      #add el uso de artefactos -{it is an action de github [marketplace of github]}
      - name: Publish the code
        run: dotnet publish -c Release -o ${{ env.DOTNET_ROOT }}/webapp
        working-directory: ./Lemoncodeweb
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: webapp-artifact
          path: ${{ env.DOTNET_ROOT }}/webapp

#deploy: #desplegar
# runs-on: windows-latest
# needs: [build] #en needs espesificamos a lo que queremos darle prioridad - Hay que esperar a que termine el job llamdo build
  # de aqui en adelante puedo seguir creando steps